# This file contains universal functions.
# MSGBOX ERROR
function unexpected_error(){
$DIALOG --backtitle "$program_name - Something went wrong..." \
    --title "Unexpected error" \
    --msgbox "There was an unexpected error. run the program and try again." 8 60

if [[ -d "$tmp_directory" ]]; then
    rm -rf "$tmp_directory/*" 2>/dev/null
fi

if [[ -d "$log_directory" ]]; then
    rm -rf "$log_directory/*" 2>/dev/null
fi
echo $(clear);exit 1
}

# File not Found
# USE: file_not_found $1
# EXAMPLE:
#        file_not_found "file.txt"
function file_not_found(){
NOFILE="$1"
$DIALOG --backtitle "$program_name - System error" \
        --colors --title "[ERROR]" \
        --msgbox "The program cannot be started because \Z4\Zb\Zu$NOFILE\Zn is missing from the computer.\n\
Try reinstalling the program to correct this problem." 10 60
echo $(clear)
exit 1
}

# DELETE FILES AND DIRECTORIES
# USE: delete_file_or_directory "$1" "$2"
# EXAMPLE:
#        delete_file_or_directory "file" "logs/file.log"
function delete_file_or_directory(){
TYPE_OF_FILE="$1"
FILENAME="$2"
$DIALOG --backtitle "$program_name" \
        --clear --colors --title "CONFIRMATION" \
        --yesno "Are you sure?\nyou want to permanently delete the $TYPE_OF_FILE \n\Z4\Zu\Zb'$FILENAME'\Zn" 10 60

REMOVE=$?
case $REMOVE in
        0)
            sleep 0.3
            if [[ -f "$FILENAME" || -d "$FILENAME" ]]; then
                rm -rf "$FILENAME" 2>/dev/null
                $DIALOG --backtitle "$program_name" \
                        --colors --title "INFORMATION" \
                        --msgbox "It was successfully removed!\n\Z4\Zu\Zb'$FILENAME'\Zn" 10 60
            else
                $DIALOG --backtitle "$program_name" \
                        --title "ERROR" \
                        --msgbox "The file or directory does not exist!" 8 40
            fi
            ;;
        1)
            sleep 0.2
            $DIALOG --backtitle "$program_name" \
                    --title "INFORMATION" \
                    --infobox "Perfect\nIt was not eliminated!" 8 40; sleep 4
            ;;
        255)
            echo $(clear)
            echo "Program aborted." >&2
            echo "";exit 1
            ;;

esac
}

# RANDOM [DATA]
# USE:
#     Example:
#             randdata 10
function randdata(){
        MATRIX="abcdefghijklmnopqrstuvwxyzABCDEFGHIJLKMNOPQRSTUVWXYZ-0123456789"
        Z3R07=""
        n=1
        i=1
        [ -z "$1" ] && length=8 || length=$1
        [ -z "$2" ] && num=1 || num=$2
        while [ ${i} -le $num ]; do
                while [ ${n} -le $length ]; do
                        Z3R07="$Z3R07${MATRIX:$(($RANDOM%${#MATRIX})):1}"
                        n=$(($n + 1))
                done
                echo $Z3R07
                n=1
                Z3R07=""
                i=$(($i + 1))
        done
}

# Coded by Z3R07-RED
# <https://github.com/Z3R07-RED>

